[user]
	email = rwessel@pebblepost.com
	name = Ryan Wessel
[alias]
	a = add
	cfg = config
	c = commit
	ps = push
	rb = rebase
	mg = merge
	ch = checkout
	rs = reset
	rl = reflog
	s = status
	cfg = config
	f = fetch
	b = branch
	prune = git remote update origin --prune
	resetLastCommit = reset --soft HEAD^
	
	# Git Commit.
	cap = "!f() { git commit -m \"$@\"; }; f"

	# NEW.
	new = "!f() { git cap \"üì¶ NEW: $@\"; }; f"
	# IMPROVE.
	imp = "!f() { git cap \"üëå IMPROVE: $@\"; }; f"
	# FIX.
	fix = "!f() { git cap \"üêõ FIX: $@\"; }; f"
	# RELEASE.
	rlz = "!f() { git cap \"üöÄ RELEASE: $@\"; }; f"
	# DOC.
	doc = "!f() { git cap \"üìñ DOC: $@\"; }; f"
	# TEST.
	tst = "!f() { git cap \"‚úÖ TEST: $@\"; }; f"
	# HOTFIX
	hot = "!f() { git cap \"üî• HOTFIX: $@\"; }; f"

	# FIND ASSIGNEES BASED ON # OF LINES CHANGED PER AUTHOR FOR ALL FILES TOUCHED BY THE PROVIDED BRANCH.
	assignees = "!f() { \
		git diff --name-only $1 origin/develop | \
		xargs -n1 git blame --line-porcelain | \
		grep \"^author \" | \
		sort | \
		uniq -c | \
		sort -nr; \
	}; f"

	# FIND COUNT OF LINES OF CODE PER PROJECT CONTRIBUTOR
	contributors = "!f() { \
		git ls-files -- 'src/*' ':!:src/__mocks__/*' ':!:.snap' | \
		xargs -n1 git blame --line-porcelain | \
		grep \"^author-mail \" | \
		sort | uniq -c | sort -nr; \
	}; f"

[core]
	excludesfile = /Users/ryanwessel/.gitignore_global
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[commit]
	template = /Users/ryanwessel/.stCommitMsg
[pager]
	branch = false
	diff = false
	blame = false
	tag = false
	stash = false
[diff]
	guitool = opendiff
